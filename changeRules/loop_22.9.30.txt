1.检测更多的属性，更容易出错
1）原：变换之后放在两个文件夹里，cpa检查循环次数和循环退出条件
没有充分利用循环体内的变量、语句的属性
2）现：变换前后的代码放在一个文件夹里，这样可以比较循环体内的对应的变量之间的关系，如循环结束时是否相等
e.g.
//source
for( ; ; ){
sum=  .....
}

//after
for( ; ; ){
sum1 = .....
}

cpa检查：if(sum != sum1 && ... && ...) goto ERROR;

2.自己添加代码
循环不变量&循环不变量代码，与循环内部无关，但是与循环外定义的变量有关。
e.g. 循环外的变量进行运算组合，得到的表达式赋给一个变量t，t加入循环中。

3.循环合并：保证合法性
1）无数据依赖：取另外的名字
2）自己构造testcase：
①循环条件n
②不同常量
③数据类型 int  long

//不合法
DO I = 1, N
  S1: A(I) = B(I) + C1
ENDDO
DO I = 1, N
  S2: D(I) = A(I+1) + C2
ENDDO

//合法
DO I = 2, N
  S1: A(I) = B(I) + C1
ENDDO
DO I = 2, N
  S2: D(I) = A(I-1) + C2
ENDDO


